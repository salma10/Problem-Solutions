/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     public int val;
 *     public ListNode next;
 *     public ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode MergeTwoLists(ListNode l1, ListNode l2) {
        if (l1 == null)
                return l2;
            if (l2 == null)
                return l1;

            var tmp1 = l1.next;
            var tmp2 = l2.next;
            if (l2.val > l1.val)
            {
                l1.next = MergeTwoLists(tmp1, l2);               

                return l1; 
            }

            l2.next = MergeTwoLists(l1, tmp2);           
            return l2;                                    
    }
}
//Another solution
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     public int val;
 *     public ListNode next;
 *     public ListNode(int x) { val = x; }
 * }
 */
public class Solution {
    public ListNode MergeTwoLists(ListNode l1, ListNode l2) {
            if (l1 == null)
                return l2;
            if (l2 == null)
                return l1;

            if (l2.val > l1.val)
            {
                l1.next = MergeTwoLists(l1.next, l2);               

                return l1; 
            }

            l2.next = MergeTwoLists(l1, l2.next);           
            return l2;                                    
    }
}
