//Problem description
/*
Given the root of a binary tree, determine if it is a complete binary tree.
In a complete binary tree, every level, except possibly the last, is completely filled, and all nodes in the last level are as far left as possible.
It can have between 1 and 2h nodes inclusive at the last level h.
*/
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
public class Solution {
    public bool IsCompleteTree(TreeNode root) {
        Queue<TreeNode> q = new();
        q.Enqueue(root);
        bool hasEmpty = false;
        
        while(q.Any())
        {
            var curr = q.Dequeue();
            if(curr == null)
            {
                hasEmpty = true;
                continue;
            }
            else if(hasEmpty)
                return false;
            
            q.Enqueue(curr.left);
            q.Enqueue(curr.right);
        }
        
        return true;
    }
}
