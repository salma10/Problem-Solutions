//Problem description
/*
You are given a string s of even length. Split this string into two halves of equal lengths, and let a be the first half and b be the second half.
Two strings are alike if they have the same number of vowels ('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'). Notice that s contains uppercase and lowercase letters.
Return true if a and b are alike. Otherwise, return false.
*/
public class Solution {
    public bool HalvesAreAlike(string s) {
        Hashtable vowels = new Hashtable(){{'a',true}, {'e',true}, {'i',true},{'o',true}, {'u',true}, {'A',true}, {'E',true}, {'I',true}, {'O',true}, {'U',true}};
        int firstHalfVowelNo = 0;
        int secondHalfVowelNo = 0;
        for(int i = 0; i < s.Length / 2; i++)
        {
            if(vowels.ContainsKey(s[i]))
                firstHalfVowelNo++;
        }
        for(int i = s.Length / 2; i < s.Length; i++)
        {
            if(vowels.ContainsKey(s[i]))
                secondHalfVowelNo++;
        }
        if(firstHalfVowelNo == secondHalfVowelNo)
            return true;
        else
            return false;
    }
}
