public class Solution {
    public bool SearchMatrix(int[][] matrix, int target) {
        int colLength = matrix[0].Length;
        for(int i = 0; i < matrix.Length; i++)
        {
            if(matrix[i][0] <= target && target <= matrix[i][colLength - 1])
                if(Search(matrix[i], colLength, target))
                    return true;
        }  
        return false;
    }
    
    private bool Search(int[] elm, int colLength, int target)
    {
        int left = 1;
        int right = colLength;
        while(left <= right)
        {
            int mid = (left + right) / 2;
            if(elm[mid - 1] == target)
                return true;
            else if(elm[mid - 1] < target)
                left = mid + 1;
            else
                right = mid - 1;
        }
        return false;
    }
}
//Another solution
public class Solution {
    public bool SearchMatrix(int[][] matrix, int target) {
        int row = matrix.Length - 1;
        int col = 0;

        while (row >= 0 && col < matrix[0].Length) {
            if (matrix[row][col] > target) {
                row--;
            } else if (matrix[row][col] < target) {
                col++;
            } else {
                return true;
            }
        }

        return false;
    }
}
