public class Solution {
    public int MinCostClimbingStairs(int[] cost) {
        int[] dp = new int[cost.Length + 1];
        for(int i = 2; i < dp.Length; i++)
        {
            dp[i] = Math.Min(dp[i - 1] + cost[i - 1], dp[i - 2] + cost[i - 2]);
        }        
        return dp[dp.Length - 1];
    }
}

//Another solution space complexity optimization
public class Solution {
    public int MinCostClimbingStairs(int[] cost) {
        int first = 0, second = 0;
        for(int i = 2; i <= cost.Length; i++)
        {
            int temp = second;
            second = Math.Min(second + cost[i - 1], first + cost[i - 2]);
            first = temp;
        }        
        return second;
    }
}
