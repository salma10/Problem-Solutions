//Problem description
/*
A parentheses string is valid if and only if:
It is the empty string,
It can be written as AB (A concatenated with B), where A and B are valid strings, or
It can be written as (A), where A is a valid string.
You are given a parentheses string s. In one move, you can insert a parenthesis at any position of the string.
For example, if s = "()))", you can insert an opening parenthesis to be "(()))" or a closing parenthesis to be "())))".
Return the minimum number of moves required to make s valid.
*/
public class Solution {
    public int MinAddToMakeValid(string s) {
        if(s == null|| s.Length == 0)
            return 0;
        int count = 0;
        Stack<char> data = new Stack<char>();
        int index = 0;
        while(index < s.Length)
        {
            if(s[index] == '(')
                data.Push(s[index]);
            else if(data.Count > 0)
                data.Pop();
            else
               count++; 
            index++;
        }
        return data.Count + count;
    }
}
