//Problem description
/*
Given an array of integers nums, sort the array in ascending order and return it.
You must solve the problem without using any built-in functions in O(nlog(n)) time complexity and with the smallest space complexity possible.
*/
public class Solution {
    public int[] SortArray(int[] nums) {
        SortedDictionary<int,int> numMap = new SortedDictionary<int,int>();
        int[] result = new int[nums.Length];
        
        for(int i = 0; i < nums.Length; i++)
        {
            if(numMap.ContainsKey(nums[i]))
                numMap[nums[i]]++;
            else
                numMap[nums[i]] = 1;
        }
        
        int index = 0;
        
        foreach(var item in numMap)
        {
            int count = item.Value;
            while(count > 0)
            {
                result[index] = item.Key;
                count--;
                index++;
            }
        }
        return result;
    }
}
