//Problem description
/*
Determine if a 9 x 9 Sudoku board is valid. Only the filled cells need to be validated according to the following rules:
Each row must contain the digits 1-9 without repetition.
Each column must contain the digits 1-9 without repetition.
Each of the nine 3 x 3 sub-boxes of the grid must contain the digits 1-9 without repetition.
Note:
A Sudoku board (partially filled) could be valid but is not necessarily solvable.
Only the filled cells need to be validated according to the mentioned rules.
*/
public class Solution {
    public bool IsValidSudoku(char[][] board) {
        HashSet<char> row = new HashSet<char>[9];
        HashSet<char> col = new HashSet<char>[9];
        HashSet<char> cell = new HashSet<char>[9];
        
        for (int i = 0; i < 9; i++) {
            row[i] = new HashSet<char>();
            col[i] = new HashSet<char>();
            cell[i] = new HashSet<char>();
        }
        
        for (int i = 0; i < 9; i++) 
        {
            for (int j = 0; j < 9; j++) 
            {
                if (board[i][j] != '.') 
                {
                    if (row[i].Contains(board[i][j]) || col[j].Contains(board[i][j]) || cell[3*(i/3)+j/3].Contains(board[i][j])) 
                    {
                        return false;
                    } 
                    else 
                    {
                        row[i].Add(board[i][j]);
                        col[j].Add(board[i][j]);
                        cell[3*(i/3)+j/3].Add(board[i][j]);
                    }
                }
            }
        }
        return true;
    }
}
