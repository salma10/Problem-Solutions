public class Solution {
    
    public bool Exist(char[][] board, string word) {
       
        if(board == null || board[0].Length == 0)
            return false;
        
        if(word == "")
            return true;
        
        for(int i = 0; i < board.Length; i++)
        {
            for(int j = 0; j < board[0].Length; j++)
            {
                if(DFS(board, word, i, j, 0))
                    return true;
            }
        }       
        return false;
    }    
    private bool DFS(char[][] board, string word, int i, int j, int index)
    {
        if(index == word.Length)
            return true;
        
        if(i < 0 || i >= board.Length || j < 0 || j >= board[0].Length || word[index] != board[i][j])
            return false;
   
        board[i][j] = '#';
        bool result = false;
        result = DFS(board, word, i - 1, j, index + 1) || DFS(board, word, i + 1, j, index + 1) || DFS(board, word, i, j - 1, index + 1) || DFS(board, word, i, j + 1, index + 1);
        board[i][j] = word[index];  
        return result;
    }
}
