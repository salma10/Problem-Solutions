/*
You are given a string s consisting of lowercase English letters. A duplicate removal consists of choosing two adjacent and equal letters and removing them.

We repeatedly make duplicate removals on s until we no longer can.

Return the final string after all such duplicate removals have been made. It can be proven that the answer is unique.
*/

public class Solution {
    public string RemoveDuplicates(string s) {
        Stack<char> res_str = new Stack<char>();
        string result = string.Empty;
        
        for(int i = 0; i < s.Length; i++)
        {
            
            if(res_str.Count() > 0 && res_str.Peek() == s[i])
                res_str.Pop();
            else
                res_str.Push(s[i]);
        }
        
        foreach(var item in res_str)
        {
            result = item + result;
        }
        return result;
    }
}
