//Problem description
/*
Given a string s, return the length of the longest substring that contains at most two distinct characters.
*/
public class Solution {
    public int LengthOfLongestSubstringTwoDistinct(string s) {
        Dictionary<char, int> charCounts = new Dictionary<char, int>();
        int startPos = 0;
        int maxLen = 0;
        
        for(int index = 0; index < s.Length; index++)
        {
            if(!charCounts.ContainsKey(s[index]))
                charCounts[s[index]] = 0;
            charCounts[s[index]]++;
           
            while(charCounts.Count > 2)
            {
                charCounts[s[startPos]]--;
                if(charCounts[s[startPos]] == 0)
                    charCounts.Remove(s[startPos]);
                startPos++;
            }
            
            maxLen = Math.Max(maxLen, index - startPos + 1);
        }
        return maxLen;
    }
}
