//Problem description
/*
You are given an integer array nums of length n, and an integer array queries of length m.
Return an array answer of length m where answer[i] is the maximum size of a subsequence that you can take from nums such that the sum of its elements is less than or equal to queries[i].
A subsequence is an array that can be derived from another array by deleting some or no elements without changing the order of the remaining elements.
*/
public class Solution {
    public int[] AnswerQueries(int[] nums, int[] queries) {
        int[] res = new int[queries.Length];
        Array.Sort(nums);
        
        for(int i=1; i<nums.Length; i++)
        {
            nums[i] += nums[i-1];
        }
        
        for(int i=0; i<res.Length; i++)
        {
            for(int j=0; j<nums.Length; j++)
            {
                if(nums[j]>queries[i]) break;
                res[i] = j+1;
            }
        }        
        return res;
    }
}
