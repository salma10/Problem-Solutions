/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
public class Solution {
    public bool IsSubtree(TreeNode root, TreeNode subRoot) {
        if(root == null || subRoot == null)
            return root == subRoot;
        return ValueCompare(root, subRoot) || IsSubtree(root.left, subRoot) || IsSubtree(root.right, subRoot);
    }
    
    private bool ValueCompare(TreeNode root, TreeNode subRoot)
    {
        if(root == null || subRoot == null)
            return root == subRoot;
        return root.val ==  subRoot.val && ValueCompare(root.left, subRoot.left) && ValueCompare(root.right, subRoot.right);
    }
}
