//Problem description
/*
Given a 0-indexed integer array nums, determine whether there exist two subarrays of length 2 with equal sum. Note that the two subarrays must begin at different indices.
Return true if these subarrays exist, and false otherwise.
A subarray is a contiguous non-empty sequence of elements within an array.
*/
public class Solution {
    public bool FindSubarrays(int[] nums) {
        Dictionary<int,int> map = new Dictionary<int,int>();
    
        for(int i = 0; i < nums.Length - 1; i++)
        {
            if(!map.ContainsKey(nums[i] + nums[i+1]))
                map[nums[i] + nums[i+1]] = 0;
            map[nums[i] + nums[i+1]]++;
            if(map[nums[i] + nums[i+1]] >= 2)
            {
                return true;
            }
        }
        
        return false;
    }
}
