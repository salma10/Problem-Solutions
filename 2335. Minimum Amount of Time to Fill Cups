//Problem description
/*
You have a water dispenser that can dispense cold, warm, and hot water. Every second, you can either fill up 2 cups with different types of water, or 1 cup of any type of water.
You are given a 0-indexed integer array amount of length 3 where amount[0], amount[1], and amount[2] denote the number of cold, warm, and hot water cups you need to fill respectively. Return the minimum number of seconds needed to fill up all the cups.
*/
public class Solution {
    public int FillCups(int[] amount) {
        PriorityQueue<int, int> pq = new PriorityQueue<int, int>();
        
        foreach(var i in amount)
        {
            if(i>0)
                 pq.Enqueue(i, -i);
        }   
        int res = 0;
        while(pq.Count>1)
        {
            res++;
            int first = pq.Dequeue()-1;
            int second = pq.Dequeue()-1;
            
            if(first>0)
                pq.Enqueue(first, -first);
            if(second>0)
                pq.Enqueue(second, -second);            
        }
        
        if(pq.Count>0)
        {
            res+=pq.Dequeue();
        }
        return res;
    }
}
