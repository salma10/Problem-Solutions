//Problem Description
/*
Given four integer arrays nums1, nums2, nums3, and nums4 all of length n, return the number of tuples (i, j, k, l) such that:
0 <= i, j, k, l < n
nums1[i] + nums2[j] + nums3[k] + nums4[l] == 0
*/
public class Solution {
    public int FourSumCount(int[] nums1, int[] nums2, int[] nums3, int[] nums4) {
        int count = 0;
        int len = nums1.Length;
        Dictionary<int, int> dict = new Dictionary<int, int>();
        
        for(int i = 0; i < len; i++)
        {
            for(int j = 0; j < len; j++)
            {
                if(dict.ContainsKey(nums1[i] + nums2[j]))
                    dict[nums1[i] + nums2[j]]++;
                else
                    dict[nums1[i] + nums2[j]] = 1;
            }
         }
        
        for(int k = 0; k < len; k++)
        {
            for(int l = 0; l < len; l++)
            {
                int rest = 0 - (nums3[k] + nums4[l]);
                if(dict.ContainsKey(rest))
                    count += dict[rest];
            }
        }
        return count;
    }
}
