//problem description
/*
Given strings s1, s2, and s3, find whether s3 is formed by an interleaving of s1 and s2.
An interleaving of two strings s and t is a configuration where they are divided into non-empty substrings such that:
s = s1 + s2 + ... + sn
t = t1 + t2 + ... + tm
|n - m| <= 1
The interleaving is s1 + t1 + s2 + t2 + s3 + t3 + ... or t1 + s1 + t2 + s2 + t3 + s3 + ...
Note: a + b is the concatenation of strings a and b.
*/
public class Solution {
    public bool IsInterleave(string s1, string s2, string s3) {
        int s3Pos = s3.Length;
        int s2Pos = s2.Length;
        int s1Pos = s1.Length;
        if(s1Pos + s2Pos != s3Pos)
            return false;
        bool[,] dp = new bool[s1Pos + 1, s2Pos + 1];
       
        for(int i = 0; i <= s1Pos; i++)
        {
            for(int j = 0; j <= s2Pos; j++)
            {
                if(i == 0 && j == 0)
                    dp[i,j] = true;
                else if(i == 0)
                    dp[i,j] = dp[i,j - 1] && s2[j - 1] == s3[i + j - 1];
                else if(j == 0)
                    dp[i,j] = dp[i - 1,j] && s1[i - 1] == s3[i + j - 1];
                else
                    dp[i,j] = (dp[i,j - 1] && s2[j - 1] == s3[i + j - 1]) || (dp[i - 1,j] && s1[i - 1] == s3[i + j - 1]);
            }
        }
        return dp[s1Pos, s2Pos];
    }
}
